@use 'sass:math';

// font size 1px-100px (+1px)
@for $i from 1 through 100 {
  $fontsize: $i;
  .fs#{$fontsize} {
    font-size: $fontsize * 1px;
  }
}
// font size 110px-300px (+10px)
@for $i from 11 through 30 {
  $fontsize: $i;
  .fs#{$fontsize * 10} {
    font-size: $fontsize * 10px;
  }
}
// relative font size 1vh-100vh (+1vh)
@for $i from 1 through 100 {
  $relativefontsize: $i;
  .rel-fs#{$relativefontsize} {
    font-size: $relativefontsize * 1vh;
  }
}

// font weight (+100)
@for $i from 1 through 9 {
  $fontweight: $i * 100;
  .fw#{math.div($fontweight, 100)} {
    font-weight: $fontweight;
  }
}

// font weight char
$fontweightchar: (bold, bolder, inherit, initial, normal, lighter, revert, unset);
@each $style in $fontweightchar {
  .#{$style}-font {
    font-weight: $style;
  }
}

// line height (+1%)
@for $i from 1 through 300 {
  $lineheight: $i;
  .lh#{$lineheight} {
    line-height: $lineheight * 1%;
  }
}

// letter spacing (+0.1em)
@for $i from 1 through 30 {
  $letterspacing: $i;
  .ls#{$letterspacing} {
    letter-spacing: math.div($letterspacing * 1em, 10);
  }
}

// font style
$fontstyle: (normal, italic, oblique, initial, inherit);
@each $style in $fontstyle {
  .#{$style}-font {
    font-style: $style;
  }
}

// font-variant-numeric
$numericfont: (
  normal,
  ordinal,
  slashed-zero,
  lining-nums,
  oldstyle-nums,
  proportional-nums,
  tabular-nums,
  diagonal-fractions,
  stacked-fractions
);
@each $nr in $numericfont {
  .#{$nr}-font-var {
    font-variant-numeric: $nr;
  }
}

@use '../../variables/borders/variables' as *;

@mixin borderMixin(
  $bp: '',
  $postfix: px,
  $classname: border-radius,
  $firstnumber: 1,
  $secondnumber: 50,
  $calculate: 1,
  $multiply: 1px,
  $hasMultiple: false,
  $secondclassname: ''
) {
  @for $i from $firstnumber through $secondnumber {
    $value: $i * $calculate;

    @if $hasMultiple == true {
      .#{$bp}#{$value}#{$postfix} {
        #{$classname}: $value * $multiply;
        #{$secondclassname}: $value * $multiply;
      }
      .hover\:#{$bp}#{$value}#{$postfix} {
        &:hover {
          #{$classname}: $value * $multiply;
          #{$secondclassname}: $value * $multiply;
        }
      }
    } @else {
      .#{$bp}#{$value}#{$postfix} {
        #{$classname}: $value * $multiply;
      }
      .hover\:#{$bp}#{$value}#{$postfix} {
        &:hover {
          #{$classname}: $value * $multiply;
        }
      }
    }
  }
}

@mixin borderColorMixin($bp, $loop, $classname, $selector: hover) {
  @each $key, $val in $loop {
    .#{$bp}#{$key} {
      #{$classname}: $val;
    }
    .#{$selector}\:#{$bp}#{$key} {
      &:#{$selector} {
        #{$classname}: $val;
      }
    }
  }
}

@mixin bordervalues($bp: '', $selector: hover) {
  @each $property, $map in $border-style {
    $key: map-get($map, 'keys');
    $values: map-get($map, 'values');

    @each $k, $v in $values {
      .#{$bp}#{$key}#{$k} {
        #{$property}: $v;
      }
      .#{$selector}\:#{$bp}#{$key}#{$k} {
        &:#{$selector} {
          #{$property}: $v;
        }
      }
    }
  }
}

@use '../../variables/color/variables' as *;

// .text-red with hover (.hov:text-red) and active (.act:text-red) classes
@mixin initialColor($bp, $classname, $selector: hover) {
  @each $key, $val in $colors {
    .#{$bp}#{$key} {
      #{$classname}: $val;
    }
    .#{$selector}\:#{$bp}#{$key} {
      &:#{$selector} {
        #{$classname}: $val;
      }
    }
  }
}

@mixin lightColor($bp: '', $firstnumber, $secondnumber, $classname, $loop, $selector: hover) {
  @each $key, $val in $loop {
    @if ($firstnumber == 0) {
      @for $i from $firstnumber through $secondnumber {
        .#{$bp}#{$key} {
          #{$classname}: $val;
        }
        .#{$selector}\:#{$bp}#{$key} {
          &:#{$selector} {
            #{$classname}: $val;
          }
        }
      }
    } @else {
      // // light variations (7%)
      @for $i from $firstnumber through $secondnumber {
        $lighten: $i * 7%;

        .#{$bp}#{$key}-#{$i} {
          #{$classname}: lighten($val, $lighten);
        }
        .#{$selector}\:#{$bp}#{$key}-#{$i} {
          &:#{$selector} {
            #{$classname}: lighten($val, $lighten);
          }
        }
      }
    }
  }
}

// custom background gradient with initial colors props and hover state
// gradient-to-right from-purple to-orange
@mixin bggradient($bp: '') {
  @each $name, $char in $fullcolors {
    .#{$bp}from-#{$name} {
      --gradient-from-color: #{$char};
      --gradient-color-merge: var(--gradient-from-color), var(--gradient-to-color);
    }
    .hover\:#{$bp}from-#{$name} {
      &:hover {
        --gradient-from-color: #{$char};
        --gradient-color-merge: var(--gradient-from-color), var(--gradient-to-color);
      }
    }
    .#{$bp}to-#{$name} {
      --gradient-to-color: #{$char};
    }
    .hover\:#{$bp}to-#{$name} {
      &:hover {
        --gradient-to-color: #{$char};
      }
    }
  }
}

@mixin bgGradientToFrom($bp: '') {
  @each $position, $value in $positions {
    .#{$bp}gradient-to-#{$position} {
      background-image: linear-gradient(to $value, var(--gradient-color-merge));
    }

    .hover\:#{$bp}gradient-to-#{$position} {
      &:hover {
        background-image: linear-gradient(to $value, var(--gradient-color-merge));
      }
    }
  }
}

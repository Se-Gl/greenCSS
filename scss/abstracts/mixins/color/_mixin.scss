@use '../../variables/color/variables' as *;

@mixin colorlight($bp: '') {
  @each $key, $val in $colors {
    // initial text color from colors list
    // text-venetianred or hov-text-venetianred
    .#{$bp}text-#{$key} {
      color: $val;
    }
    .#{$bp}hov\:text-#{$key} {
      &:hover {
        color: $val;
      }
    }
    // initial bg color from colors list
    // text-venetianred
    .#{$bp}bg-#{$key} {
      background-color: $val;
    }
    .#{$bp}hov\:bg-#{$key} {
      &:hover {
        background-color: $val;
      }
    }

    // // light variations (7%)
    @for $i from 1 through 5 {
      $lighten: $i * 7%;
      $lighten-name: $i;

      // text with lighter color
      // text-venetianred-1
      .#{$bp}text-#{$key}-#{$i} {
        color: lighten($val, $lighten);
      }
      // text hover with lighter color
      // hov-text-venetianred-1
      .#{$bp}hov\:text-#{$key}-#{$i} {
        &:hover {
          color: lighten($val, $lighten);
        }
      }
      // bg with lighter color
      // bg-venetianred-1
      .#{$bp}bg-#{$key}-#{$i} {
        background-color: lighten($val, $lighten);
      }
      // bg hover with lighter color
      // bg-venetianred-1
      .#{$bp}hov\:bg-#{$key}-#{$i} {
        &:hover {
          background-color: lighten($val, $lighten);
        }
      }
    }
  }
}

// default light and dark
// text-dark text-light and hov-text-dark hov-text-light
@mixin defaultcolor($bp: '') {
  @each $color, $hex in $lightdark {
    @for $i from 1 through 1 {
      $lighten: $i * 7%;
      $color-name: $i;

      .#{$bp}text-#{$color} {
        color: $hex;
      }
      .#{$bp}hov\:text-#{$color} {
        &:hover {
          color: $hex;
        }
      }

      .#{$bp}bg-#{$color} {
        background-color: $hex;
      }
      .#{$bp}hov\:bg-#{$color} {
        &:hover {
          background-color: $hex;
        }
      }
    }
  }
}

// custom background gradient with initial colors props and hover state
// gradient-to-right from-purple to-orange
@mixin bggradient($bp: '') {
  @each $name, $char in $colors {
    .#{$bp}from-#{$name} {
      --gradient-from-color: #{$char};
      --gradient-color-merge: var(--gradient-from-color), var(--gradient-to-color);
    }
    .#{$bp}hov\:from-#{$name} {
      &:hover {
        --gradient-from-color: #{$char};
        --gradient-color-merge: var(--gradient-from-color), var(--gradient-to-color);
      }
    }
    .#{$bp}to-#{$name} {
      --gradient-to-color: #{$char};
    }
    .#{$bp}hov\:to-#{$name} {
      &:hover {
        --gradient-to-color: #{$char};
      }
    }
  }
}

@mixin bgGradientToFrom($bp: '') {
  @each $position, $value in $positions {
    .#{$bp}gradient-to-#{$position} {
      background-image: linear-gradient(to $value, var(--gradient-color-merge));
    }

    .#{$bp}hov\:gradient-to-#{$position} {
      &:hover {
        background-image: linear-gradient(to $value, var(--gradient-color-merge));
      }
    }
  }
}

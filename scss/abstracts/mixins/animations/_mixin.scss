@use '../../variables/animation/variables' as *;

@mixin animation(
  $bp: delay-,
  $firstnumber: 1,
  $secondnumber: 100,
  $classname: animation-delay,
  $calculate: 100,
  $postfix: ms,
  $multiply: 1ms
) {
  @for $i from $firstnumber through $secondnumber {
    $animationvalue: $i * $calculate;

    .#{$bp}#{$animationvalue}#{$postfix} {
      -webkit-#{$classname}: $animationvalue * $multiply;
      #{$classname}: $animationvalue * $multiply;
    }
    .hover\:#{$bp}#{$animationvalue}#{$postfix} {
      #{$classname}: $animationvalue * $multiply;
    }
  }
}

@mixin animationvalues($bp: '') {
  @each $property, $map in $animationutilities {
    $key: map-get($map, 'keys');
    $values: map-get($map, 'values');

    @each $k, $v in $values {
      .#{$bp}#{$key}#{$k} {
        -webkit-#{$property}: $v;
        #{$property}: $v;
      }
    }
  }
}

// handcrafted animation mixins
@mixin animationname($name) {
  -webkit-animation-name: $name;
  animation-name: $name;
}

@mixin transformorigin($origin) {
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}

@mixin animationtimingfunction($bezier) {
  -webkit-animation-timing-function: $bezier;
  animation-timing-function: $bezier;
}

@mixin transform($transform) {
  -webkit-transform: $transform;
  transform: $transform;
}

@mixin cubic($cubic) {
  -webkit-animation-timing-function: $cubic;
  animation-timing-function: $cubic;
}

@mixin backfacevisibility($state) {
  -webkit-backface-visibility: $state;
  backface-visibility: $state;
}

// handcrafted keyframes
@mixin pokeKeyframe($keyframeName: pokeLeft, $firstvalue: 0, $translateX: translateX(25px), $rotate: rotate(2deg)) {
  @keyframes #{$keyframeName} {
    0% {
      @include cubic(ease-out);
      @include transform(translateX(0));
    }

    40% {
      @include cubic(ease-in);
      @include transform($translateX $rotate);
    }
  }
}
